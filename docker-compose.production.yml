# Production Docker Compose Configuration for LabForCode
# Use this for full containerized production deployment

version: "3.8"

services:
  # Main Application
  codelab-app:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: codelab-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://codelab:${POSTGRES_PASSWORD:-password123}@postgres:5432/codelab_pro
      - REDIS_URL=redis://redis:6379
      - USE_LOCAL_COMPILERS=false
      - USE_DOCKER=true
    volumes:
      - ./tmp:/app/tmp
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - codelab-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: codelab-postgres
    environment:
      - POSTGRES_DB=codelab_pro
      - POSTGRES_USER=codelab
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - codelab-network

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: codelab-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - codelab-network

  # Java Compiler Service
  java-compiler:
    image: openjdk:17-jdk-slim
    container_name: codelab-java
    volumes:
      - ./tmp:/workspace
    working_dir: /workspace
    command: tail -f /dev/null
    restart: unless-stopped
    networks:
      - codelab-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: codelab-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - codelab-app
    restart: unless-stopped
    networks:
      - codelab-network

volumes:
  postgres_data:
  redis_data:

networks:
  codelab-network:
    driver: bridge
